'
config:
    particle:
        # Used by Particle product add (Beta) invalid command at 1.52.
        product    : 'XXXXX'

        images:
            #flash   : '../boron-system-part1@2.0.1.bin'
            flash   : 'R5Bin.bin'
            test    : 'R5Test.bin'
            tinker  : 'tinker-0.8.0-rc.27-boron.bin'

device:
  id: ''
  last_id: ''
  type: ''
  serial: ''
  name: ''
  path: ''

def flash_image "Flash the flash image"
    pb/flash /config/particle/images/flash


def flash_tinker "Flash the tinker image"
    pb/flash /config/particle/images/tinker


def flash_test
    "Flash the test image"
    pb/flash /config/particle/images/test


def product_add
    """ product device add product id - associate the device wit a product"""
    set product /config/particle/product
    pb/product_add

def list-w-timeout():
    "Do a serial list, trying repeatedly on failure for a timeout period"
    with /config/waiting pb/-list-usb-w-timeout


def get_usb_and_id():
    """
    Retrieve and set the USB device, the board name,  and the device id.
    Uses 'particle serial list' in a timeout loop. This is required
    for most things. Wait and handshake, use the usb device,
    and the id is needed by many things.
    """
    # PB['usb_device'], PB['device_id'] = P.get_usb_and_id()
    path, name, id = P.get_w_timeout(A.get_in_config(["waiting", "timeout"]))
    A._set_({"device": {"path": path, "name": name, "id": id}})


def wait_for_plist():
    """Wait for particle serial list to succeed with timeout, doesn't
    really work."""
    # we don't care about the results, just to wait.
    with /config/waiting pb/-get-w-timeout



def id-it
    "Id the board. get, reset then identify. Need the reset and pauses for consistent success"
    pb/get pb/reset dev/wait pb/pause pb/pause pb/identify

def id-it-w-dialog
    "Give a start dialog, get, then identify."
    ui/dialog-start pb/id-it

def setup
    "Update the os and mark the setup bit done."
    pb/update dev/wait pb/pause pb/setup-done

def nuke
    "Try to reset the board to a sane state."
    pb/tinker dev/wait pb/update dev/wait pb/get pb/id-it

def testit
    "flash the test, handshake and process the results."
    pb/flash-test dev/wait pb/pause dev/handshake

def ckit
    "Id, and check it over, cloud status and inspect."
    pb/id-it pb/cloud-status pb/inspect

def claimit
    "Do a product add followed by device add."
    pb/product-add dev/wait pb/add

def claimit-3ways
    "Do a product add, device add, cloud claim."
    pb/product-add dev/wait pb/add dev/wait claim

def full-without-dialogs
    "This is the whole process, dialogs only at the beginning and end."
    pb/id-it pb/setup pb/add dev/wait pb/testit pb/flash as/archive-log

def full-with-dialogs
    "This is the whole process, dialogs everywhere."
    id-it-w-dialog pb/setup pb/add dev/wait ui/dialog-test pb/testit ui/dialog-flash pb/flash as/archive-log
