'
config:
    particle:
        external_cli_prefix: 'particle'
        product    : 'XXXXX'

        images:
            #flash   : '../boron-system-part1@2.0.1.bin'
            flash   : 'R5Bin.bin'
            test    : 'R5Test.bin'
            tinker  : 'tinker-0.8.0-rc.27-boron.bin'

device:
  id: ''
  last_id: ''
  type: ''
  serial: ''
  name: ''
  path: ''



def init-with
    "Set up the with stack so we get our stuff."
'
- with /config/dialogs
- with /config/device/serial
- with /config/device/waiting
- with /config/device/handshake
- with /config/particle
- with /device



# # experiment.
# def cmd "Do particle-cli commands"
#     '
#     - set external_cli_prefix 'particle'
#     - sh/do-cli-cmd

def inspect
    "Inspect the particle device"
    pb/cmd "serial inspect"

def login
    "Login to particle cloud from the cli prompt"
    os/system "particle cloud login"

def logout
    "Logout of particle cloud, clean up tokens."
    os/system "particle cloud logout"

def flash-image
    "Flash the default flash image"
    pb/flash `~/config/particle/images/flash

def flash-tinker
    "Flash the default tinker image"
    pb/flash `~/config/particle/images/tinker

def flash-test
    "Flash the default test image"
    pb/flash `~/config/particle/images/test

partial release
    "Release the claim on a device"
    pb/id-cmd  "device remove"

partial cloud-status
    "Check the cloud-status of the device."
    pb/id-cmd "usb cloud-status"

partial reset-usb
    "Reset the device on the usb for the given device id."
    pb/id-cmd "usb reset"

def -doctor
    "Run particle doctor. (just doctor)"
    pb/cmd "-v doctor"

def doctor
    "Run particle doctor. (list usb, dfu mode then -> doctor)"
    '
    - pb/list
    - pb/dfu
    - pb/-doctor



def update
    "Update the device OS. ie. dfu, update."
    '
    - with /tmp
    - log/info "Temporarily setting timeout to 60."
    - set timeout 60
    - log/info "Starting dfu"
    - pb/dfu
    - log/info "Updating device"
    - pb/cmd "update"
    - pop-with



def set-setup-bit
    "Mark the setup bit done."
    '
    - pb/cmd "usb setup-done"
    - log/info "Set: Setup-done"




def add
    "Register/claim device with 'particle device add'"
    '
    - log/info "Registering device."
    # particle product add $product_id $device_id
    - pb/id-cmd "device add"



def claim
    "Cloud claim device with 'particle cloud claim'"
    '
    - log/info "Claiming device."
    # particle product add $product_id $device_id
    - pb/id-cmd "cloud claim"



partial get
    "Find the particle device and get it's vitals."
    pb/get-w-timeout


# def get-usb-and-id
#     "Retrieve and set the USB device, the board name,  and the device id.
#     Uses 'particle serial list' in a timeout loop."
#     '
#     - pb/get
#     - pop results .



def listen
    "Start listening."
    '
    - pb/cmd "usb start-listening"
    - log/info "Listening"



def dfu
    "Put USB device in dfu mode. `particle usb dfu`.
    Timeout should not be necessary."
    pb/cmd "usb dfu"

def list
    "list the particle devices connected to usb."
    pb/cmd "serial list"

def identify "Identify a particle board"
    '
    - log/info "Identify, Start listening"
    - pb/listen
    - pb/cmd "identify"



# Create some steps from the parts to compose into a process.

def id-it
    "Id the board. get, reset then identify. The reset and pauses are
    necessary for consistent success"
    '
    - pb/get
    - pop results .
    - pb/reset-usb
    - dev/wait
    - dev/pause
    - dev/pause
    - pb/identify



def ckit
    "Id, and check it over, cloud status and inspect."
    '
    - pb/id-it
    - pb/cloud-status
    - pb/inspect



def nukeit
    "Try to reset the board to a sane state."
    '
    - pb/tinker
    - dev/wait
    - pb/update
    - dev/wait
    - pb/get
    - pb/id-it



def setup
    "Update the os and mark the setup bit done."
    '
    - pb/update
    - dev/wait
    - dev/pause
    - pb/setup-bit-done



def testit
    "flash the test, handshake and process the results."
    '
    - pb/flash-test
    - dev/wait
    - dev/pause
    - dev/handshake



def claimit
    "Do a product add followed by device add."
    '
    - pb/product-add
    - dev/wait
    - pb/add



def claimit-3ways
    "Do a product add, device add, cloud claim."
    '
    - pb/product-add
    - dev/wait
    - pb/add
    - dev/wait
    - claim



def processit
    "This is the whole process, dialogs only at the beginning and end."
    '
    - pb/id-it
    - pb/setup
    - pb/add
    - dev/wait
    - pb/testit
    - pb/flash
    - as/archive-log




def processit-with-dialogs
    "This is the whole process, dialogs everywhere."
    '
    - ui/dialog-start
    - pb/id-it
    - pb/setup
    - pb/add
    - dev/wait
    - ui/dialog-test
    - pb/testit
    - ui/dialog-flash
    - pb/flash
    - as/archive-log
